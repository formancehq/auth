/*
Auth API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: AUTH_VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authclient

import (
	"encoding/json"
)

// ManyClientsResponse struct for ManyClientsResponse
type ManyClientsResponse struct {
	Data []Client `json:"data,omitempty"`
}

// NewManyClientsResponse instantiates a new ManyClientsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManyClientsResponse() *ManyClientsResponse {
	this := ManyClientsResponse{}
	return &this
}

// NewManyClientsResponseWithDefaults instantiates a new ManyClientsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManyClientsResponseWithDefaults() *ManyClientsResponse {
	this := ManyClientsResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ManyClientsResponse) GetData() []Client {
	if o == nil || o.Data == nil {
		var ret []Client
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManyClientsResponse) GetDataOk() ([]Client, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ManyClientsResponse) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []Client and assigns it to the Data field.
func (o *ManyClientsResponse) SetData(v []Client) {
	o.Data = v
}

func (o ManyClientsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableManyClientsResponse struct {
	value *ManyClientsResponse
	isSet bool
}

func (v NullableManyClientsResponse) Get() *ManyClientsResponse {
	return v.value
}

func (v *NullableManyClientsResponse) Set(val *ManyClientsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableManyClientsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableManyClientsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManyClientsResponse(val *ManyClientsResponse) *NullableManyClientsResponse {
	return &NullableManyClientsResponse{value: val, isSet: true}
}

func (v NullableManyClientsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManyClientsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


