/*
Auth API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: AUTH_VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authclient

import (
	"encoding/json"
)

// OneSecretResponse struct for OneSecretResponse
type OneSecretResponse struct {
	Data *Secret `json:"data,omitempty"`
}

// NewOneSecretResponse instantiates a new OneSecretResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOneSecretResponse() *OneSecretResponse {
	this := OneSecretResponse{}
	return &this
}

// NewOneSecretResponseWithDefaults instantiates a new OneSecretResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOneSecretResponseWithDefaults() *OneSecretResponse {
	this := OneSecretResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *OneSecretResponse) GetData() Secret {
	if o == nil || o.Data == nil {
		var ret Secret
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OneSecretResponse) GetDataOk() (*Secret, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *OneSecretResponse) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given Secret and assigns it to the Data field.
func (o *OneSecretResponse) SetData(v Secret) {
	o.Data = &v
}

func (o OneSecretResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableOneSecretResponse struct {
	value *OneSecretResponse
	isSet bool
}

func (v NullableOneSecretResponse) Get() *OneSecretResponse {
	return v.value
}

func (v *NullableOneSecretResponse) Set(val *OneSecretResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOneSecretResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOneSecretResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOneSecretResponse(val *OneSecretResponse) *NullableOneSecretResponse {
	return &NullableOneSecretResponse{value: val, isSet: true}
}

func (v NullableOneSecretResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOneSecretResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


