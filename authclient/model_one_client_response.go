/*
Auth API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: AUTH_VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authclient

import (
	"encoding/json"
)

// OneClientResponse struct for OneClientResponse
type OneClientResponse struct {
	Data *Client `json:"data,omitempty"`
}

// NewOneClientResponse instantiates a new OneClientResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOneClientResponse() *OneClientResponse {
	this := OneClientResponse{}
	return &this
}

// NewOneClientResponseWithDefaults instantiates a new OneClientResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOneClientResponseWithDefaults() *OneClientResponse {
	this := OneClientResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *OneClientResponse) GetData() Client {
	if o == nil || o.Data == nil {
		var ret Client
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OneClientResponse) GetDataOk() (*Client, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *OneClientResponse) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given Client and assigns it to the Data field.
func (o *OneClientResponse) SetData(v Client) {
	o.Data = &v
}

func (o OneClientResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableOneClientResponse struct {
	value *OneClientResponse
	isSet bool
}

func (v NullableOneClientResponse) Get() *OneClientResponse {
	return v.value
}

func (v *NullableOneClientResponse) Set(val *OneClientResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOneClientResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOneClientResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOneClientResponse(val *OneClientResponse) *NullableOneClientResponse {
	return &NullableOneClientResponse{value: val, isSet: true}
}

func (v NullableOneClientResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOneClientResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


